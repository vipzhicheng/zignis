(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{207:function(n,s,e){"use strict";e.r(s);var i=e(0),o=Object(i.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"核心命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心命令"}},[n._v("#")]),n._v(" 核心命令")]),n._v(" "),e("h2",{attrs:{id:"zignis-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zignis-application"}},[n._v("#")]),n._v(" "),e("code",[n._v("zignis application")])]),n._v(" "),e("blockquote",[e("p",[n._v("alias: "),e("code",[n._v("app")])])]),n._v(" "),e("p",[n._v("默认这个命令没有任何功能，存在的意思是跟业务项目建立一个约定，建议业务项目添加的命令都写成这个命令的子命令。而业务项目之所以能为这个命令添加子命令是利用了 "),e("code",[n._v("Zignis")]),n._v(" 的命令扩展机制。")]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[n._v("zignis "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("command")]),n._v(" application/test --extend"),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("zignis\n")])])]),e("p",[n._v("这样就可以为项目添加一个 test 命令，而这个命令在执行的时候需要使用 "),e("code",[n._v("zignis application test")]),n._v(" 的方式来调用。")]),n._v(" "),e("p",[n._v("通过 "),e("code",[n._v("zignis application help")]),n._v(" 可以看到当前业务项目定义的所有顶级子命令，因为如果项目实现的命令过多，层次也多的话，一般我们很难记住所有命令和参数，所以帮助命令是我们经常要执行的。")]),n._v(" "),e("h2",{attrs:{id:"zignis-hook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zignis-hook"}},[n._v("#")]),n._v(" "),e("code",[n._v("zignis hook")])]),n._v(" "),e("p",[n._v("这个命令的输出显示了当前环境下可用的所有的钩子，所有实现这些钩子的逻辑都可以被执行。在输出当中能够看到钩子的名称，描述，以及钩子在哪个模块声明的：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("╔══════════════════════╤═════════════════════╤════════════════════════════════════════════════════╗\n║ Hook                 │ Package             │ Description                                        ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_beforeCommand   │ zignis              │ Hook triggered before command execution.           ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_afterCommand    │ zignis              │ Hook triggered after command execution.            ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_components      │ zignis              │ Hook triggered when needing to fetch components    ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_hook            │ zignis              │ Hook triggered in hook command.                    ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_repl            │ zignis              │ Hook triggered in repl command.                    ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_status          │ zignis              │ Hook triggered in status command.                  ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_new_repo        │ zignis              │ Hook triggered in new command.                     ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_zhike_cron      │ zignis-plugin-zhike │ Hook triggered in zignis zhike cron command        ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_zhike_component │ zignis-plugin-zhike │ Hook triggered when zhike hook_components invoked  ║\n╟──────────────────────┼─────────────────────┼────────────────────────────────────────────────────╢\n║ hook_zhike_repl      │ zignis-plugin-zhike │ Hook triggered when zhike hook_repl invoked        ║\n╚══════════════════════╧═════════════════════╧════════════════════════════════════════════════════╝\n")])])]),e("p",[n._v("这里可以看到有一个特殊的钩子是 "),e("code",[n._v("hook_hook")]),n._v(" 实现这个钩子就可以声明钩子，任何插件都可以声明自己的钩子，让其他命令来调用，从而影响自身的行为，一般业务项目是不需要声明自己的钩子的，除非业务项目深度使用了这个机制，来构成自己业务的插件系统。")]),n._v(" "),e("p",[n._v("另外需要注意的是，即使不声明，钩子也是可以被使用的，只要其被实现了，这里声明钩子只是为了透明。具体如何声明和实现钩子将在钩子相关章节说明。")]),n._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[n._v("WARNING")]),n._v(" "),e("p",[n._v("这里未来有可能改成不声明的钩子不让使用的逻辑")])]),n._v(" "),e("h2",{attrs:{id:"zignis-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zignis-init"}},[n._v("#")]),n._v(" "),e("code",[n._v("zignis init")])]),n._v(" "),e("p",[n._v("这个命令用来做初始化，可以实现两种场景，对业务项目的初始化或者对插件的初始化，这两个场景的差别在于目录结构稍有差异。")]),n._v(" "),e("p",[n._v("业务项目中，我们默认将 "),e("code",[n._v("Zignis")]),n._v(" 的目录结构放到 "),e("code",[n._v("bin")]),n._v(" 目录:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("├── .zignisrc.json\n├── bin\n│   └── zignis\n│       ├── commands\n│       ├── extends\n│       ├── hooks\n│       ├── plugins\n│       └── scripts\n└── package.json\n\n")])])]),e("p",[n._v("而在插件项目中，我们是把所有代码放到 "),e("code",[n._v("src")]),n._v(" 目录:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("├── .zignisrc.json\n├── src\n│    ├── commands\n│    ├── extends\n│    ├── hooks\n└── package.json\n")])])]),e("p",[n._v("这个命令存在的意义也仅仅是为了节省工程师若干秒的时间，也就是说如果不用这个命令，手动去创建这些目录和文件夹也是 OK 的。")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),e("p",[n._v("关于 "),e("code",[n._v(".zignisrc.json")]),n._v(" 的结构和用途将在配置管理章节说明")])]),n._v(" "),e("p",[n._v("另外，如果我们真的要创建一个插件，通过初始化的方式进行还是太慢了，这里推荐使用插件项目模板进行，具体的命令如下：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("zignis new zignis-plugin-xxx --select=plugin\n")])])]),e("p",[n._v("很明显这里还可以使用其他项目模板，关于 "),e("code",[n._v("new")]),n._v(" 命令，参见下放关于 "),e("code",[n._v("new")]),n._v(" 命令的介绍。")])])}),[],!1,null,null,null);s.default=o.exports}}]);