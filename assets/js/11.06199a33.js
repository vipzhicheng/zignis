(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{210:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"插件开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件开发"}},[t._v("#")]),t._v(" 插件开发")]),t._v(" "),a("h2",{attrs:{id:"快速开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),a("p",[a("code",[t._v("Zignis")]),t._v(" 插件就是一个标准的 "),a("code",[t._v("Node")]),t._v(" 模块，只不过要符合一些目录和文件结构的约定，而这些约定往往很难记忆，所以我们为插件开发者或者工具的使用者提供了各种辅助的工具，例如代码自动生成。这里描述的是推荐的插件开发流程，但同时，在熟悉开发流程之后，也完全可以从一个空目录开始手动构建一个插件。")]),t._v(" "),a("h3",{attrs:{id:"第一步：根据模板，创建插件目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步：根据模板，创建插件目录"}},[t._v("#")]),t._v(" 第一步：根据模板，创建插件目录")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("zignis new zignis-plugin-xyz --select=plugin\n")])])]),a("p",[t._v("这里使用了内置的插件模板，按照之前配置管理说的，我们完全可以覆盖 "),a("code",[t._v("repo")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 选项，或者覆盖 "),a("code",[t._v("--select")]),t._v(" 选项来省去每次都传默认参数。")]),t._v(" "),a("h3",{attrs:{id:"第二步：进入插件目录，执行默认命令，证明一切正常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步：进入插件目录，执行默认命令，证明一切正常"}},[t._v("#")]),t._v(" 第二步：进入插件目录，执行默认命令，证明一切正常")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd zignis-plugin-xyz\nzignis hi\n")])])]),a("p",[t._v("这是插件模板内置的一个命令，初始化完成后，进入目录即可执行，完成首次你与插件命令的一次对话，如果你看到它回答你 "),a("code",[t._v("Hey you!")]),t._v(" 就证明已经准备好，接下来就可以写真正改变世界的脚本了。")]),t._v(" "),a("h2",{attrs:{id:"添加命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加命令"}},[t._v("#")]),t._v(" 添加命令")]),t._v(" "),a("p",[t._v("需要注意的是，这个插件模板是基于 "),a("code",[t._v("Typescript")]),t._v("，因此你需要有一些 "),a("code",[t._v("Typescript")]),t._v(" 基础，然后我们开发时建议开着 "),a("code",[t._v("yarn watch")]),t._v(" 命令窗口，来实时编译，一边开发一边测试。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("zignis make command xyz\n")])])]),a("p",[t._v("一般插件名和插件封装的命令会有一定的关联，这里我们添加一个 "),a("code",[t._v("xyz")]),t._v(" 命令，当然你也可以在之前的 "),a("code",[t._v("hi")]),t._v(" 命令上修改。真正掌握了插件开发之后，默认的 "),a("code",[t._v("hi")]),t._v(" 命令就应该删掉了。")]),t._v(" "),a("h2",{attrs:{id:"实现钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现钩子"}},[t._v("#")]),t._v(" 实现钩子")]),t._v(" "),a("p",[t._v("实现钩子是开发插件的另一个目的，而钩子往往都是其他插件或者业务项目定义的，通过钩子的实现可以影响和改变其他插件的行为。")]),t._v(" "),a("p",[t._v("通过这个命令查询当前环境支持哪些钩子：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("zignis hook\n")])])]),a("h3",{attrs:{id:"例子1：实现-hook-new-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子1：实现-hook-new-repo"}},[t._v("#")]),t._v(" 例子1：实现 "),a("code",[t._v("hook_new_repo")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/hooks/index.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hook_new_repo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  demo_repo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    repo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo_repo.git'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    alias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("通过这个钩子，让我们在 "),a("code",[t._v("zignis new [PROJECT] --select")]),t._v(" 命令执行时可以选择自定义的项目模板，只需要记住别名，不需要记住地址；另一个好处是不需要管每个工程师个人电脑上是如何设置全局 "),a("code",[t._v("--repo")]),t._v(" 选项的，只需要安装了指定的插件，那大家就都可以用相同的项目别名初始化项目了。")]),t._v(" "),a("h3",{attrs:{id:"例子2：实现-hook-repl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子2：实现-hook-repl"}},[t._v("#")]),t._v(" 例子2：实现 "),a("code",[t._v("hook_repl")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/hooks/index.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hook_repl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("multiple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("然后在 REPL 环境，就可以使用了:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("zignis repl\n>>> add\n[Function: add]\n>>> await add(1, 2)\n3\n>>> multiple\n[Function: multiple]\n>>> await multiple(3, 4)\n12\n")])])]),a("p",[t._v("插件和业务项目在实现这个钩子时的出发点是不一样的，业务项目一般注入的是具体的业务逻辑，而插件一般注入的是公共的方法，具有一定的复用性，比如可以注入底层服务的实例方法，常用的库等等，比如核心注入的 "),a("code",[t._v("Utils")]),t._v(" 里面就包含 "),a("code",[t._v("lodash")]),t._v(" 库。")]),t._v(" "),a("h2",{attrs:{id:"暴露方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暴露方法"}},[t._v("#")]),t._v(" 暴露方法")]),t._v(" "),a("p",[t._v("实现插件还有一个最原始的目的，就是当做一个模块，对外暴露出实例，方法或者类库。这种情况下一方面，我们可以用标准的方式定义模块，例如：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这种方式没有任何问题，但是一般定义这种方式的模块也不需要遵守 "),a("code",[t._v("Zignis")]),t._v(" 的规范，只要遵守 "),a("code",[t._v("node")]),t._v(" 和 "),a("code",[t._v("npm")]),t._v(" 的规范即可。这里 "),a("code",[t._v("Zignis")]),t._v(" 定义了另外一种暴露方法的方式。基于钩子机制。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/hooks/index.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hook_components "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zignis'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Utils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'components'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> 'b'")]),t._v("\n")])])]),a("p",[t._v("利用这种方式，我们可以封装一些业务项目的公共方法，然后跨项目进行使用，这些公共方法普遍偏底层，比如各种中间件，或者底层服务。")]),t._v(" "),a("h2",{attrs:{id:"发布插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布插件"}},[t._v("#")]),t._v(" 发布插件")]),t._v(" "),a("p",[t._v("通过命令，钩子或者类库的扩展，我们就写好了一个 "),a("code",[t._v("Zignis")]),t._v(" 插件，如果想跟他人共享你的插件，需要做一些准备工作。")]),t._v(" "),a("h3",{attrs:{id:"_1-上传代码到一个-git-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-上传代码到一个-git-仓库"}},[t._v("#")]),t._v(" 1. 上传代码到一个 "),a("code",[t._v("git")]),t._v(" 仓库")]),t._v(" "),a("p",[t._v("如果是开源的可以选择 "),a("code",[t._v("Github")]),t._v("，如果是内部插件，就上传到内部仓库即可，可能是 "),a("code",[t._v("Github")]),t._v(" 私有仓库或者公司的 "),a("code",[t._v("Gitlab")]),t._v(" 仓库")]),t._v(" "),a("h3",{attrs:{id:"_2-修改-package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改-package-json"}},[t._v("#")]),t._v(" 2. 修改 "),a("code",[t._v("package.json")])]),t._v(" "),a("p",[t._v("主要是包名，版本，协议，仓库地址，首页地址等。")]),t._v(" "),a("p",[t._v("如果是内部插件，可以修改一下 "),a("code",[t._v(".npmrc")]),t._v(" 文件里的 "),a("code",[t._v("registry")]),t._v(" 地址。")]),t._v(" "),a("h3",{attrs:{id:"_3-获得一个-npm-仓库的账号，并登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-获得一个-npm-仓库的账号，并登录"}},[t._v("#")]),t._v(" 3. 获得一个 npm 仓库的账号，并登录")]),t._v(" "),a("p",[t._v("如果是开源的插件，可以去 "),a("code",[t._v("https://npmjs.org")]),t._v(" 去注册，如果是私有部署的 "),a("code",[t._v("npm")]),t._v(" 仓库，则可以找运维获得账号")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm login --registry=[YOUR_REGISTRY]\n")])])]),a("h3",{attrs:{id:"_4-测试插件包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-测试插件包"}},[t._v("#")]),t._v(" 4. 测试插件包")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm pack --dry-run\n")])])]),a("p",[t._v("通过打包测试，看看包里是否包含多余的文件，调整 "),a("code",[t._v(".npmignore")]),t._v(" 文件的配置。")]),t._v(" "),a("h3",{attrs:{id:"_5-发布你的插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-发布你的插件"}},[t._v("#")]),t._v(" 5. 发布你的插件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm version [patch|minor|major]\nnpm publish\n")])])]),a("h3",{attrs:{id:"_6-宣传插件，分享开发心得"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-宣传插件，分享开发心得"}},[t._v("#")]),t._v(" 6. 宣传插件，分享开发心得")]),t._v(" "),a("p",[t._v("酒香也怕巷子深，需要写好文档，并积极宣传，让别人使用和反馈。")]),t._v(" "),a("h3",{attrs:{id:"_7-积极维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-积极维护"}},[t._v("#")]),t._v(" 7. 积极维护")]),t._v(" "),a("p",[t._v("任何 npm 包都有可能逐渐过时，或者有安全风险，需要我们积极维护，让插件发挥本来应该发挥的作用。")])])}),[],!1,null,null,null);s.default=e.exports}}]);