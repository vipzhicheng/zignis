(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{206:function(t,v,_){"use strict";_.r(v);var a=_(0),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("p",[t._v("Zignis 是一个命令行开发框架，基于优秀的 "),_("code",[t._v("yargs")]),t._v(" 包做的封装和扩展，Zignis 要解决的不是如何解析命令行选项和参数，如何定义命令和触发命令这样的问题，而是对如何在业务中落地做了规范和约定，使得公司内部众多的Node 微服务项目可以有一致的命令行架构，并且在此基础上提供了各种扩展特性。")]),t._v(" "),_("h2",{attrs:{id:"原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[t._v("#")]),t._v(" 原则")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("一致性")]),t._v(": 不管Node项目使用何种框架，或者如何抽象分层，都可以使用本框架来实现统一风格的命令行脚本。")]),t._v(" "),_("li",[_("strong",[t._v("可扩展性")]),t._v(": 插件可以扩展，命令可以覆写，配置可以覆盖，使用钩子机制，可以与内置或第三方插件定义的钩子交互。")]),t._v(" "),_("li",[_("strong",[t._v("高效")]),t._v(": 上手简单，开发效率高，风格一致，维护效率高，使用频繁，工作效率高。")])]),t._v(" "),_("h2",{attrs:{id:"特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),_("ul",[_("li",[t._v("核心概念少但是强大，包括插件，命令，脚本，配置，钩子等。")]),t._v(" "),_("li",[t._v("插件，命令，配置，都可以按照约定的方式进行扩展或者覆盖。")]),t._v(" "),_("li",[t._v("提供了一个可扩展的 REPL 环境，并且支持 "),_("code",[t._v("await")]),t._v("。")]),t._v(" "),_("li",[t._v("可以为其他插件定义的命令添加子命令。")]),t._v(" "),_("li",[t._v("提供了一个简单的代码生成的机制，基本的插件，命令，脚本样板代码可以自动生成，支持扩展。")]),t._v(" "),_("li",[t._v("支持组织插件的包名格式。")])]),t._v(" "),_("h2",{attrs:{id:"名字的由来"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#名字的由来"}},[t._v("#")]),t._v(" 名字的由来")]),t._v(" "),_("p",[_("code",[t._v("ignis")]),t._v(" 是拉丁语的火种的意思，"),_("code",[t._v("Z")]),t._v(" 是智课的智的首字母。所以，意思就很明显了，就是想做一个基础设施，成为公司发展的火种。")])])}),[],!1,null,null,null);v.default=s.exports}}]);