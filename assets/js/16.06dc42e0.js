(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{213:function(e,t,i){"use strict";i.r(t);var n=i(0),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[e._v("#")]),e._v(" 插件")]),e._v(" "),i("p",[e._v("在 "),i("code",[e._v("基础->插件开发")]),e._v(" 小节，已经介绍了插件开发的方法和注意事项，这里主要是介绍一些为什么开发插件，什么时候开发插件。")]),e._v(" "),i("h2",{attrs:{id:"业务插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#业务插件"}},[e._v("#")]),e._v(" 业务插件")]),e._v(" "),i("p",[e._v("首先，如果没有插件， "),i("code",[e._v("Zignis")]),e._v(" 内置的几个命令对大家也没有多大用处，所有的价值都需要通过扩展 "),i("code",[e._v("Zignis")]),e._v(" 释放，其中插件就是最重要的一种形态。插件里最常见的就是定义命令，这不奇怪，因为 "),i("code",[e._v("Zignis")]),e._v(" 本身就是个命令，也被设计为命令行开发框架。这里的重点是命令可以定义到插件中，而插件作为独立的 Node 模块可以发布到 "),i("code",[e._v("npm")]),e._v(" 或公司自建的 "),i("code",[e._v("registry")]),e._v("，从而使得一个命令可以被安装到多个项目。")]),e._v(" "),i("p",[e._v("我们很难保证一个项目可以在公司所有的项目中都有用，但是相同业务线的不同项目中是有可能有交集的，我们可以通过对插件名进一步规范来划分插件的适用范围，例如：")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("zignis-plugin-[公司标识]-[业务线标识]-[用途标识]\n")])])]),i("h2",{attrs:{id:"创新插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创新插件"}},[e._v("#")]),e._v(" 创新插件")]),e._v(" "),i("p",[e._v("另外，之前的文档中也提到，我们也可以开发非业务属性的插件，只要自己觉得有趣，有想法，都可以试试，例如：")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("zignis-plugin-music-download\nzignis-plugin-video-download\nzignis-plugin-todolist\nzignis-plugin-puzzle-me\nzignis-plugin-convert-a-to-b\n")])])]),i("p",[e._v("上面只是随便起一些名字，其实这些插件还都不存在。")]),e._v(" "),i("h2",{attrs:{id:"本地插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#本地插件"}},[e._v("#")]),e._v(" 本地插件")]),e._v(" "),i("p",[e._v("不是所有的插件都必须要发布到 "),i("code",[e._v("npm")]),e._v(" 的，我们可以开发很多只有自己知道的插件，满足自己的需求，这种插件一般都是放到 "),i("code",[e._v("~/.zignis/node_modules")]),e._v(" 的，这样可以在当前账户的任意位置调用。")]),e._v(" "),i("h2",{attrs:{id:"社区插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#社区插件"}},[e._v("#")]),e._v(" 社区插件")]),e._v(" "),i("p",[e._v("目前我已知的插件一部分是开源的，一部分是公司内部仓库的，现在把开源的插件列出来，供大家参考。")]),e._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://github.com/vipzhicheng/zignis-plugin-ssh",target:"_blank",rel:"noopener noreferrer"}},[e._v("zignis-plugin-ssh"),i("OutboundLink")],1),e._v(": 一个管理 SSH 账户的插件，支持添加，列表，删除，搜索，登录等操作")]),e._v(" "),i("li",[i("a",{attrs:{href:"https://github.com/vipzhicheng/zignis-plugin-serve",target:"_blank",rel:"noopener noreferrer"}},[e._v("zignis-plugin-serve"),i("OutboundLink")],1),e._v(": 一个 Web 服务插件，支持静态资源也支持动态接口，基于 "),i("code",[e._v("Koa")])]),e._v(" "),i("li",[i("a",{attrs:{href:"https://github.com/zhike-team/zignis-plugin-zhike",target:"_blank",rel:"noopener noreferrer"}},[e._v("zignis-plugin-zhike"),i("OutboundLink")],1),e._v(": 整合了公司的基础设施，其中鉴权是走的是配置管理服务，这个插件只负责自动连接和暴露方法")]),e._v(" "),i("li",[i("a",{attrs:{href:"https://github.com/zhike-team/zignis-plugin-zhike-dingtalk",target:"_blank",rel:"noopener noreferrer"}},[e._v("zignis-plugin-zhike-dingtalk"),i("OutboundLink")],1),e._v(": 整合了钉钉的 Webhook，可以快速给钉钉群发消息")]),e._v(" "),i("li",[i("a",{attrs:{href:"https://github.com/vipzhicheng/zignis-plugin-read",target:"_blank",rel:"noopener noreferrer"}},[e._v("zignis-plugin-read"),i("OutboundLink")],1),e._v(": 借助各种开源项目实现的把一个网页主体转成各种各样常用的格式")])])])}),[],!1,null,null,null);t.default=r.exports}}]);